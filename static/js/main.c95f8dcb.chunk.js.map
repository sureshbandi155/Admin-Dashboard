{"version":3,"sources":["components/Login/Login.module.css","components/Signup/Signup.module.css","components/Signup/Signup.js","components/Login/Login.js","components/Sidebar/Sidebar.js","components/Home/Home.js","components/dashboard/Dashboard.js","components/Projects/Projects.js","components/Settings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","SignUp","state","formControls","name","value","email","password","confirmPassword","loginUserDetails","errorPassword","signRes","changeHandler","event","target","setState","test","submitHandler","preventDefault","formData","formElementIdentifier","data","console","info","error","log","axios","post","then","response","catch","err","loginHandler","props","history","push","this","className","classes","signupContainer","signup","action","onSubmit","noValidate","inputGroup","type","placeholder","onChange","onClick","Component","Login","google","facebookLogin","fbName","picture","auth","alert","redirectSignupHandler","responseGoogle","profileObj","componentClicked","responseFacebook","url","loginContainer","login","clientId","buttonText","onSuccess","onFailure","appId","autoLoad","fields","callback","href","sidebar","id","class","to","data-toggle","aria-expanded","dashboard","scope","match","projects","settings","App","callBackendAPI","a","fetch","json","body","status","Error","message","res","express","from","exact","path","component","Dashboard","Home","Projects","Settings","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c95f8dcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__nEc3T\",\"login\":\"Login_login__VmEBC\",\"inputGroup\":\"Login_inputGroup__Q8HHI\",\"error\":\"Login_error__5ilva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signupContainer\":\"Signup_signupContainer__1Fmme\",\"signup\":\"Signup_signup__4onaj\",\"inputGroup\":\"Signup_inputGroup__3Evj_\",\"error\":\"Signup_error__CFN6-\"};","import React, { Component } from 'react';\r\nimport classes from './Signup.module.css';\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n        (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        formControls: {\r\n            name: {\r\n                value: ''\r\n            },\r\n            email: {\r\n                value: ''\r\n            },\r\n            password: {\r\n                value: ''\r\n            },\r\n            confirmPassword: {\r\n                value: ''\r\n            }\r\n        },\r\n        errors: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        loginUserDetails: '',\r\n        errorPassword: '',\r\n        signRes: ''\r\n    };\r\n    changeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        let errors = this.state.errors;\r\n        this.setState({\r\n            formControls: {\r\n                ...this.state.formControls,\r\n                [name]: {\r\n                    ...this.state.formControls[name],\r\n                    value\r\n                }\r\n            }\r\n        });\r\n        switch (name) {\r\n            case 'name':\r\n                errors.name =\r\n                    value.length < 5\r\n                        ? 'Full Name must be 5 characters long!'\r\n                        : '';\r\n                break;\r\n            case 'email':\r\n                errors.email =\r\n                    validEmailRegex.test(value)\r\n                        ? ''\r\n                        : 'Email is not valid!';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 8\r\n                        ? 'Password must be 8 characters long!'\r\n                        : '';\r\n                break;\r\n            case 'confirmPassword':\r\n                errors.confirmPassword =\r\n                    value.length < 8\r\n                        ? 'Confirm password must be 8 characters long!'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors, [name]: value });\r\n\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        // console.log(this.state.formControls);\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.formControls) {\r\n            formData[formElementIdentifier] = this.state.formControls[formElementIdentifier].value;\r\n        }\r\n        const data = {\r\n            ...formData\r\n        };\r\n        if (validateForm(this.state.errors)) {\r\n            console.info('Valid Form');\r\n        } else {\r\n            console.error('Invalid Form')\r\n        }\r\n\r\n        if (this.state.formControls.password.value !== this.state.formControls.confirmPassword.value) {\r\n            this.setState({ errorPassword: 'Password not match' });\r\n            console.log(this.state.errorPassword);\r\n\r\n        }\r\n        else {\r\n            this.setState({ errorPassword: '' });\r\n            axios.post('http://localhost:4000/signup', data)\r\n            .then(response => {\r\n               this.setState({signRes: response.data});\r\n               console.log('data: ' + this.state.signRes);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n      \r\n       \r\n    };\r\n    loginHandler = () => {\r\n        this.props.history.push('/login');\r\n    }\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className={classes.signupContainer}>\r\n                    <h1>Sign up</h1>\r\n                    <div className={classes.signup}>\r\n                        <form action=\"\" onSubmit={this.submitHandler} noValidate>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Full Name<span>*</span></label>\r\n                                <input type=\"name\" name=\"name\"\r\n                                    placeholder=\"Enter Full Name\" noValidate\r\n                                    value={this.state.formControls.name.value}\r\n                                    onChange={this.changeHandler}\r\n                                />\r\n                                {errors.name.length > 0 &&\r\n                                    <p className={classes.error}>{errors.name}</p>}\r\n                            </div>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Email Address<span>*</span></label>\r\n                                <input type=\"email\" name=\"email\"\r\n                                    placeholder=\"name@gmail.com\" noValidate\r\n                                    value={this.state.formControls.email.value}\r\n                                    onChange={this.changeHandler}\r\n                                />\r\n                                {errors.email.length > 0 &&\r\n                                    <p className={classes.error}>{errors.email}</p>}\r\n                            </div>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Password<span>*</span></label>\r\n                                <input type=\"password\" name=\"password\"\r\n                                    placeholder=\"Password\" noValidate\r\n                                    value={this.state.formControls.password.value}\r\n                                    onChange={this.changeHandler}\r\n                                />\r\n                                {errors.password.length > 0 &&\r\n                                    <p className={classes.error}>{errors.password}</p>}\r\n                            </div>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Confirm Password<span>*</span></label>\r\n                                <input type=\"password\" name=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\" noValidate\r\n                                    value={this.state.formControls.confirmPassword.value}\r\n                                    onChange={this.changeHandler}\r\n                                />\r\n                                {errors.confirmPassword.length > 0 &&\r\n                                    <p className={classes.error}>{errors.confirmPassword}</p>}\r\n                                {<p className={classes.error}>{this.state.errorPassword}</p>}\r\n\r\n\r\n                            </div>\r\n                            <div>\r\n                            {<p className={classes.error}>{this.state.signRes}</p>}\r\n                                <input type=\"submit\" value=\"Sign up\" />\r\n\r\n                            </div>\r\n                        </form>\r\n                        <p>Click here to\r\n                            <a  onClick={this.loginHandler}>Login</a>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport classes from './Login.module.css';\r\n\r\nimport axios from 'axios';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\n\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n        (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        formControls: {\r\n            email: {\r\n                value: ''\r\n            },\r\n            password: {\r\n                value: ''\r\n            }\r\n        },\r\n        loginUserDetails: '',\r\n        errors: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        google: {\r\n        },\r\n        facebookLogin: {\r\n            fbName: '',\r\n            picture: ''\r\n        },\r\n        auth: false\r\n    };\r\n\r\n    changeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        let errors = this.state.errors;\r\n\r\n        this.setState({\r\n            formControls: {\r\n                ...this.state.formControls,\r\n                [name]: {\r\n                    ...this.state.formControls[name],\r\n                    value\r\n                }\r\n            }\r\n        });\r\n\r\n        switch (name) {\r\n            case 'email':\r\n                errors.email =\r\n                    validEmailRegex.test(value)\r\n                        ? ''\r\n                        : 'Email is not valid!';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 8\r\n                        ? 'Password must be 8 characters long!'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors, [name]: value });\r\n\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.formControls) {\r\n            formData[formElementIdentifier] = this.state.formControls[formElementIdentifier].value;\r\n        }\r\n        const data = {\r\n            ...formData\r\n        };\r\n        if (validateForm(this.state.errors)) {\r\n            console.info('Valid Form');\r\n        } else {\r\n            console.error('Invalid Form')\r\n        }\r\n        // console.log(this.state.loginUserDetails);\r\n        // if (this.state.loginUserDetails.data === \"Login successfully done.\") {\r\n        //     this.props.history.push('/dashboard');\r\n        // }\r\n\r\n        axios.post('http://localhost:4000/login', data)\r\n            .then(response => {\r\n                alert(response.data);\r\n                this.setState({ loginUserDetails: response.data });\r\n                this.props.history.push('/dashboard');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.props.history.push('/login');\r\n            });\r\n\r\n\r\n    };\r\n    \r\n    redirectSignupHandler = () => {\r\n        this.props.history.push('/signup');\r\n    }\r\n    responseGoogle = (response) => {\r\n        this.setState({ google: response.profileObj, auth: true });\r\n        console.log(response);\r\n        this.props.history.push('/dashboard');\r\n    }\r\n    componentClicked = () => {\r\n        console.log('btn clicked');\r\n    }\r\n    responseFacebook = (response) => {\r\n        console.log(response);\r\n        this.setState({fbName: response.name, \r\n        picture: response.picture.data.url,\r\n        auth: true});\r\n        this.props.history.push('/dashboard');\r\n    }\r\n    \r\n    render() {\r\n        // console.log(this.state);\r\n        const { errors } = this.state;\r\n        // console.log(data);\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className={classes.loginContainer}>\r\n                    <h1>Log in</h1>\r\n                    <div className={classes.login}>\r\n                        <GoogleLogin\r\n                            clientId=\"1002797710780-o39g3un6tukk7uk1v0p6omsjssu1u0u7.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\r\n                            buttonText=\"LOGIN WITH GOOGLE\"\r\n                            onSuccess={this.responseGoogle}\r\n                            onFailure={this.responseGoogle}\r\n                        />\r\n                        <FacebookLogin\r\n                            appId=\"274007033579197\"\r\n                            autoLoad={true}\r\n                            fields=\"name,email,picture\"\r\n                            onClick={this.componentClicked}\r\n                            callback={this.responseFacebook} />\r\n                        <form action=\"\" onSubmit={this.submitHandler}>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Email Address</label>\r\n                                <input type=\"email\" name=\"email\"\r\n                                    placeholder=\"name@gmail.com\"\r\n                                    value={this.state.formControls.email.value}\r\n                                    onChange={this.changeHandler} noValidate />\r\n                                {errors.email.length > 0 &&\r\n                                    <span className={classes.error}>{errors.email}</span>}\r\n                            </div>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Password</label>\r\n                                <input type=\"password\" name=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={this.state.formControls.password.value}\r\n                                    onChange={this.changeHandler} noValidate />\r\n                                {errors.password.length > 0 &&\r\n                                    <span className={classes.error}>{errors.password}</span>}\r\n                            </div>\r\n                            <div>\r\n                                {/* {<span className={classes.error}>{this.state.loginUserDetails}</span>} */}\r\n                                <input type=\"submit\" value=\"Log In\" />\r\n                            </div>\r\n                        </form>\r\n                        <p>Forgot password?</p>\r\n                        <p>Don’t have an account?\r\n                            <a href=\"#\" onClick={this.redirectSignupHandler}>Sign up</a>\r\n                        </p>\r\n                        {/* <p onClick={this.redirectSignupHandler}>Sign up</p> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport { Switch, Route, NavLink } from 'react-router-dom';\r\n\r\nimport './Sidebar.css';\r\n\r\nconst sidebar = (props) => {\r\n    return (\r\n        <div>\r\n            {/* <!-- Sidebar  -->/ */}\r\n\r\n            <nav id=\"sidebar\">\r\n                <div class=\"sidebar-header\">\r\n\r\n                </div>\r\n\r\n                <ul class=\"list-unstyled components\">\r\n                    <li>\r\n                        <NavLink to=\"/dashboard/home\">Home/My desk</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/dashboard/projects\" >Projects</NavLink>\r\n                        {/* <a href=\"#\">Projects</a> */}\r\n                    </li>\r\n                    <li>\r\n                    <NavLink to=\"/dashboard/time\">Time Tracker/Reports</NavLink>\r\n                    </li>\r\n                    <li>\r\n                    <NavLink to=\"/dashboard/payments\">Payments</NavLink>\r\n                    </li>\r\n                    <li>\r\n                    <NavLink to=\"/dashboard/nda-contant\">NDA/Contact</NavLink>\r\n                    </li>\r\n                    <li>\r\n                    <NavLink to=\"/dashboard/support\">Support</NavLink>\r\n                    </li>\r\n                    <li>\r\n                    <NavLink to=\"/dashboard/refer\">Refer and  earn</NavLink>\r\n                    </li>\r\n                    <li>\r\n                    <NavLink to=\"/dashboard/settings\">Account Setting</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">Messages</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#homeSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" class=\"dropdown-toggle\">Home</a>\r\n                        <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\">\r\n                            <li>\r\n                                <a href=\"#\">Home 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\">Home 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\">Home 3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">About</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#pageSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" class=\"dropdown-toggle\">Pages</a>\r\n                        <ul class=\"collapse list-unstyled\" id=\"pageSubmenu\">\r\n                            <li>\r\n                                <a href=\"#\">Page 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\">Page 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\">Page 3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">Portfolio</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">Contact</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default sidebar;","import React, { Component } from 'react';\r\nimport { Switch, Route, NavLink } from 'react-router-dom';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nimport classes from './Home.module.css';\r\n\r\nconst dashboard = (props) => {\r\n    return (\r\n        <div>\r\n            <div class=\"wrapper\">\r\n                {/* <!-- Sidebar  -->/ */}\r\n                <Sidebar />\r\n                <div id=\"content\">\r\n                    <h3 className=\"mb-4\">Ongoing Projects</h3>\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Project Name</th>\r\n                                <th scope=\"col\">Due Date</th>\r\n                                <th scope=\"col\">Team size</th>\r\n                                <th scope=\"col\">Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Website Development</td>\r\n                                <td>16 Aug, 2020</td>\r\n                                <td>4</td>\r\n                                <td>WIP</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Homepage Design</td>\r\n                                <td>16 Aug, 2020</td>\r\n                                <td>2</td>\r\n                                <td>In QA</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Social Media Marketing</td>\r\n                                <td>16 Aug, 2020</td>\r\n                                <td>2</td>\r\n                                <td>Ready for Review</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default dashboard;","import React, { Component } from 'react';\r\n\r\nimport './Dashboard.css';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Home from '../Home/Home';\r\n\r\n\r\nconst dashboard = ({ match }) => {\r\n    return (\r\n        <div>\r\n            <div class=\"wrapper\">\r\n                <Sidebar />\r\n                <div id=\"content\">\r\n                  \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default dashboard;","import React from 'react';\r\nimport { Switch, Route, NavLink } from 'react-router-dom';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\n\r\nimport classes from './Projects.module.css';\r\n\r\nconst projects = (props) => {\r\n    return (\r\n        <div>\r\n        <div class=\"wrapper\">\r\n            {/* <!-- Sidebar  -->/ */}\r\n            <Sidebar />\r\n            <div id=\"content\">\r\n             <p>Porjects Component.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport default projects;","import React from 'react';\r\nimport { Switch, Route, NavLink } from 'react-router-dom';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nimport classes from './Settings.module.css';\r\n\r\nconst settings = (props) => {\r\n    return (\r\n        <div>\r\n            <div class=\"wrapper\">\r\n                {/* <!-- Sidebar  -->/ */}\r\n                <Sidebar />\r\n                <div id=\"content\">\r\n                    <p>Account Settings Component.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default settings;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\n\r\n// import classes from './App.module.css';\r\nimport SignUp from './components/Signup/Signup';\r\nimport Login from './components/Login/Login';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport Home from './components/Home/Home';\r\nimport Projects from './components/Projects/Projects';\r\nimport Settings from './components/Settings/Settings';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: null\r\n  }\r\n  componentDidMount() {\r\n    this.callBackendAPI()\r\n      .then(res => this.setState({ data: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n  callBackendAPI = async () => {\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n    if (response.status !== 200) {\r\n      throw Error(body.message)\r\n    }\r\n    return body;\r\n  };\r\n  render() {\r\n    console.log(this.state.data);\r\n    return (\r\n      <BrowserRouter>\r\n        {/* <Header /> */}\r\n        <Redirect from=\"/\" to=\"/login\" />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n        <Route exact path=\"/dashboard\" component={Dashboard} />\r\n        <Route   path=\"/dashboard/home\" component={Home} />\r\n        <Route   path=\"/dashboard/projects\" component={Projects} />\r\n        <Route   path=\"/dashboard/settings\" component={Settings} />\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}