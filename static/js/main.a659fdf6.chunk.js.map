{"version":3,"sources":["components/Login/Login.module.css","components/Navbar/Navbar.module.css","components/Signup/Signup.module.css","components/Signup/Signup.js","components/Login/Login.js","components/Sidebar/Sidebar.js","components/Navbar/Navbar.js","components/Home/Home.js","components/Projects/Projects.js","components/Settings/Settings.js","components/Timetracker/Timetracker.js","components/Payments/Payments.js","components/NDA/NDA.js","components/Support/Support.js","components/Refer and earn/Refer.js","App.js","serviceWorker.js","store/reducers/auth.js","store/actions/actionTypes.js","index.js"],"names":["module","exports","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","SignUp","state","formControls","name","value","email","password","confirmPassword","loginUserDetails","errorPassword","signRes","changeHandler","event","target","setState","test","submitHandler","preventDefault","formData","formElementIdentifier","data","console","info","error","log","axios","post","then","response","catch","err","loginHandler","props","history","push","this","className","classes","signupContainer","signup","action","onSubmit","noValidate","inputGroup","type","placeholder","onChange","onClick","Component","Login","google","facebookLogin","fbName","picture","auth","alert","redirectSignupHandler","responseGoogle","profileObj","responseGoogleFailure","componentClicked","responseFacebook","url","loginContainer","login","clientId","buttonText","onSuccess","onFailure","appId","autoLoad","fields","callback","href","sidebar","id","to","Navbar","redirectHandler","Left","icon","faEnvelope","faBell","src","withRouter","Dashboard","updateHandler","document","getElementById","style","display","scope","faEdit","projects","settings","Timetracker","payments","NDA","support","refer","App","callBackendAPI","a","fetch","json","body","status","Error","message","res","express","from","exact","path","component","Home","Projects","Payments","Support","Refer","Settings","Boolean","window","location","hostname","match","initialState","token","userId","loading","authStart","authSuccess","idToken","authFail","authLogout","reducer","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a659fdf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__5vKOd\",\"login\":\"Login_login__1BpMR\",\"inputGroup\":\"Login_inputGroup__3Px5L\",\"error\":\"Login_error__3fPvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2pt35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signupContainer\":\"Signup_signupContainer__3TQ4y\",\"signup\":\"Signup_signup__pkXoZ\",\"inputGroup\":\"Signup_inputGroup__3Arh_\",\"error\":\"Signup_error__3_dZN\"};","import React, { Component } from 'react';\r\nimport classes from './Signup.module.css';\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n        (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        formControls: {\r\n            name: {\r\n                value: ''\r\n            },\r\n            email: {\r\n                value: ''\r\n            },\r\n            password: {\r\n                value: ''\r\n            },\r\n            confirmPassword: {\r\n                value: ''\r\n            }\r\n        },\r\n        errors: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        loginUserDetails: '',\r\n        errorPassword: '',\r\n        signRes: ''\r\n    };\r\n    changeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        let errors = this.state.errors;\r\n        this.setState({\r\n            formControls: {\r\n                ...this.state.formControls,\r\n                [name]: {\r\n                    ...this.state.formControls[name],\r\n                    value\r\n                }\r\n            }\r\n        });\r\n        switch (name) {\r\n            case 'name':\r\n                errors.name =\r\n                    value.length < 5\r\n                        ? 'Full Name must be 5 characters long!'\r\n                        : '';\r\n                break;\r\n            case 'email':\r\n                errors.email =\r\n                    validEmailRegex.test(value)\r\n                        ? ''\r\n                        : 'Email is not valid!';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 8\r\n                        ? 'Password must be 8 characters long!'\r\n                        : '';\r\n                break;\r\n            case 'confirmPassword':\r\n                errors.confirmPassword =\r\n                    value.length < 8\r\n                        ? 'Confirm password must be 8 characters long!'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors, [name]: value });\r\n\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        // console.log(this.state.formControls);\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.formControls) {\r\n            formData[formElementIdentifier] = this.state.formControls[formElementIdentifier].value;\r\n        }\r\n        const data = {\r\n            ...formData\r\n        };\r\n        if (validateForm(this.state.errors)) {\r\n            console.info('Valid Form');\r\n        } else {\r\n            console.error('Invalid Form')\r\n        }\r\n\r\n        if (this.state.formControls.password.value !== this.state.formControls.confirmPassword.value) {\r\n            this.setState({ errorPassword: 'Password not match' });\r\n            console.log(this.state.errorPassword);\r\n\r\n        }\r\n        else {\r\n            this.setState({ errorPassword: '' });\r\n            axios.post('http://localhost:4000/signup', data)\r\n                .then(response => {\r\n                    this.setState({ signRes: response.data });\r\n                    // console.log('data: ' + this.state.signRes);\r\n                    // this.props.history.push('/login');\r\n\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n\r\n\r\n    };\r\n    loginHandler = () => {\r\n        this.props.history.push('/login');\r\n    }\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className={classes.signupContainer}>\r\n                    <h1>Sign up</h1>\r\n                    <div className={classes.signup}>\r\n                        <form action=\"\" onSubmit={this.submitHandler} noValidate>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Full Name<span>*</span></label>\r\n                                <input type=\"name\" name=\"name\"\r\n                                    placeholder=\"Enter Full Name\" noValidate\r\n                                    value={this.state.formControls.name.value}\r\n                                    onChange={this.changeHandler}\r\n                                />\r\n                                {errors.name.length > 0 &&\r\n                                    <p className={classes.error}>{errors.name}</p>}\r\n                            </div>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Email Address<span>*</span></label>\r\n                                <input type=\"email\" name=\"email\"\r\n                                    placeholder=\"name@gmail.com\" noValidate\r\n                                    value={this.state.formControls.email.value}\r\n                                    onChange={this.changeHandler}\r\n                                />\r\n                                {errors.email.length > 0 &&\r\n                                    <p className={classes.error}>{errors.email}</p>}\r\n                            </div>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Password<span>*</span></label>\r\n                                <input type=\"password\" name=\"password\"\r\n                                    placeholder=\"Password\" noValidate\r\n                                    value={this.state.formControls.password.value}\r\n                                    onChange={this.changeHandler}\r\n                                />\r\n                                {errors.password.length > 0 &&\r\n                                    <p className={classes.error}>{errors.password}</p>}\r\n                            </div>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Confirm Password<span>*</span></label>\r\n                                <input type=\"password\" name=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\" noValidate\r\n                                    value={this.state.formControls.confirmPassword.value}\r\n                                    onChange={this.changeHandler}\r\n                                />\r\n                                {errors.confirmPassword.length > 0 &&\r\n                                    <p className={classes.error}>{errors.confirmPassword}</p>}\r\n                                {<p className={classes.error}>{this.state.errorPassword}</p>}\r\n\r\n\r\n                            </div>\r\n                            <div>\r\n                                {<p className={classes.error}>{this.state.signRes}</p>}\r\n                                <input type=\"submit\" value=\"Sign up\" />\r\n\r\n                            </div>\r\n                        </form>\r\n                        <p>Click here to\r\n                            <a onClick={this.loginHandler}>Login</a>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport classes from './Login.module.css';\r\n\r\nimport axios from 'axios';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\n\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n        (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        formControls: {\r\n            email: {\r\n                value: ''\r\n            },\r\n            password: {\r\n                value: ''\r\n            }\r\n        },\r\n        loginUserDetails: '',\r\n        errors: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        google: {\r\n        },\r\n        facebookLogin: {\r\n            fbName: '',\r\n            picture: ''\r\n        },\r\n        auth: false\r\n    };\r\n\r\n    changeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        let errors = this.state.errors;\r\n\r\n        this.setState({\r\n            formControls: {\r\n                ...this.state.formControls,\r\n                [name]: {\r\n                    ...this.state.formControls[name],\r\n                    value\r\n                }\r\n            }\r\n        });\r\n\r\n        switch (name) {\r\n            case 'email':\r\n                errors.email =\r\n                    validEmailRegex.test(value)\r\n                        ? ''\r\n                        : 'Email is not valid!';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 8\r\n                        ? 'Password must be 8 characters long!'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ errors, [name]: value });\r\n\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.formControls) {\r\n            formData[formElementIdentifier] = this.state.formControls[formElementIdentifier].value;\r\n        }\r\n        const data = {\r\n            ...formData\r\n        };\r\n        if (validateForm(this.state.errors)) {\r\n            console.info('Valid Form');\r\n        } else {\r\n            console.error('Invalid Form')\r\n        }\r\n        // console.log(this.state.loginUserDetails);\r\n        // if (this.state.loginUserDetails.data === \"Login successfully done.\") {\r\n        //     this.props.history.push('');\r\n        // }\r\n\r\n        axios.post('http://localhost:4000/login', data)\r\n            .then(response => {\r\n                alert(response.data);\r\n                this.setState({ loginUserDetails: response.data });\r\n                this.props.history.push('/home');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.props.history.push('/login');\r\n            });\r\n\r\n\r\n    };\r\n\r\n    redirectSignupHandler = () => {\r\n        this.props.history.push('/signup');\r\n    }\r\n    responseGoogle = (response) => {\r\n        this.setState({ google: response.profileObj, auth: true });\r\n        console.log(response);\r\n        this.props.history.push('/home');\r\n    }\r\n    responseGoogleFailure = () => {\r\n        this.props.history.push('/login');\r\n    }\r\n    componentClicked = () => {\r\n        // console.log('btn clicked');\r\n    }\r\n    responseFacebook = (response) => {\r\n        console.log(response);\r\n        this.setState({\r\n            fbName: response.name,\r\n            picture: response.picture.data.url,\r\n            auth: true\r\n        });\r\n        this.props.history.push('/home');\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state);\r\n        const { errors } = this.state;\r\n        // console.log(data);\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className={classes.loginContainer}>\r\n                    <h1>Log in</h1>\r\n                    <div className={classes.login}>\r\n                        <GoogleLogin\r\n                            clientId=\"1002797710780-o39g3un6tukk7uk1v0p6omsjssu1u0u7.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\r\n                            buttonText=\"LOGIN WITH GOOGLE\"\r\n                            onSuccess={this.responseGoogle}\r\n                            onFailure={this.responseGoogleFailure}\r\n                        />\r\n                        <FacebookLogin\r\n                            appId=\"274007033579197\"\r\n                            autoLoad={false}\r\n                            fields=\"name,email,picture\"\r\n                            onClick={this.componentClicked}\r\n                            callback={this.responseFacebook}  onFailure={this.responseGoogleFailure}/>\r\n                        <form action=\"\" onSubmit={this.submitHandler}>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Email Address</label>\r\n                                <input type=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"name@gmail.com\"\r\n                                    value={this.state.formControls.email.value}\r\n                                    onChange={this.changeHandler} noValidate />\r\n                                {errors.email.length > 0 &&\r\n                                    <span className={classes.error}>{errors.email}</span>}\r\n                            </div>\r\n                            <div className={classes.inputGroup}>\r\n                                <label>Password</label>\r\n                                <input type=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={this.state.formControls.password.value}\r\n                                    onChange={this.changeHandler} noValidate />\r\n                                {errors.password.length > 0 &&\r\n                                    <span className={classes.error}>{errors.password}</span>}\r\n                            </div>\r\n                            <div>\r\n                                {/* {<span className={classes.error}>{this.state.loginUserDetails}</span>} */}\r\n                                <input type=\"submit\" value=\"Log In\" />\r\n                            </div>\r\n                        </form>\r\n                        <p>Forgot password?</p>\r\n                        <p>Don’t have an account?\r\n                            <a href=\"#\" onClick={this.redirectSignupHandler}>Sign up</a>\r\n                        </p>\r\n                        {/* <p onClick={this.redirectSignupHandler}>Sign up</p> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Sidebar.css';\r\n\r\nconst sidebar = (props) => {\r\n    return (\r\n        <div>\r\n            {/* <!-- Sidebar  -->/ */}\r\n\r\n            <nav id=\"sidebar\">\r\n                <div className=\"sidebar-header\">\r\n\r\n                </div>\r\n\r\n                <ul className=\"list-unstyled components\">\r\n                    <li>\r\n                        <NavLink to=\"/home\">Home/My desk</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/projects\" >Projects</NavLink>\r\n                        {/* <a href=\"#\">Projects</a> */}\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/time\">Time Tracker/Reports</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/payments\">Payments</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/nda-contract\">NDA/Contract</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/support\">Support</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/refer\">Refer and  earn</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/settings\">Account Setting</NavLink>\r\n                    </li>\r\n                    {/* <li>\r\n                        <a href=\"#\">Messages</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#homeSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Home</a>\r\n                        <ul className=\"collapse list-unstyled\" id=\"homeSubmenu\">\r\n                            <li>\r\n                                <a href=\"#\">Home 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\">Home 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\">Home 3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">About</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#pageSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Pages</a>\r\n                        <ul className=\"collapse list-unstyled\" id=\"pageSubmenu\">\r\n                            <li>\r\n                                <a href=\"#\">Page 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\">Page 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#\">Page 3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">Portfolio</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#\">Contact</a>\r\n                    </li> */}\r\n                </ul>\r\n            </nav>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default sidebar;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport classes from './Navbar.module.css';\r\n\r\nclass Navbar extends Component {\r\n    redirectHandler = () => {\r\n        this.props.history.push('/home');\r\n    }\r\n    render() {\r\n       \r\n        return (\r\n            <div className={classes.Navbar}>\r\n                <div>\r\n                    <button onClick={this.redirectHandler}>Home</button>\r\n                </div>\r\n                <div className={classes.Left}>\r\n                    {/* <button>Start New Project</button> */}\r\n                    <FontAwesomeIcon icon={faEnvelope} />\r\n                    <FontAwesomeIcon icon={faBell} />\r\n                    <img src=\"https://lh5.googleusercontent.com/-gNAmwhr8Js8/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rczoDdBarOOLuz4pWizP76TNnBXDQ/s96-c/photo.jpg\" />\r\n    \r\n                </div>\r\n    \r\n            </div>\r\n        );\r\n    }\r\n   \r\n    \r\n}\r\nexport default withRouter(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\nclass Dashboard extends Component {\r\n    updateHandler = () => {\r\n        document.getElementById(\"table\").style.display = \"none\";\r\n        document.getElementById(\"edit-form\").style.display = \"block\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div className=\"wrapper\">\r\n                {/* <!-- Sidebar  -->/ */}\r\n                <Sidebar />\r\n                <div id=\"content\">\r\n                    <Navbar />\r\n                    <h3 className=\"mb-4\">Ongoing Projects</h3>\r\n                    <table className=\"table table-hover text-center\" id=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Project Name</th>\r\n                                <th scope=\"col\">Due Date</th>\r\n                                <th scope=\"col\">Team size</th>\r\n                                <th scope=\"col\">Status</th>\r\n                                <th scope=\"col\">Edit</th>\r\n                                {/* <th scope=\"col\">Delete</th> */}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Website Development</td>\r\n                                <td>16 Aug, 2020</td>\r\n                                <td>4</td>\r\n                                <td>WIP</td>\r\n                                <td><a><FontAwesomeIcon icon={faEdit}/></a></td>\r\n                                {/*<td><a><FontAwesomeIcon icon={faTrash}/></a></td>*/}\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Homepage Design</td>\r\n                                <td>16 Aug, 2020</td>\r\n                                <td>2</td>\r\n                                <td>In QA</td>\r\n                                <td><a><FontAwesomeIcon icon={faEdit}/></a></td>\r\n                                {/* <td><a><FontAwesomeIcon icon={faTrash}/></a></td> */}\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Social Media Marketing</td>\r\n                                <td>16 Aug, 2020</td>\r\n                                <td>2</td>\r\n                                <td>Ready for Review</td>\r\n                                <td><FontAwesomeIcon icon={faEdit}/></td>\r\n                                {/* <td><a><FontAwesomeIcon icon={faTrash}/></a></td> <a onClick={this.updateHandler}</a>*/}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n                {/* <div>\r\n                <form id=\"content\">\r\n                    <input type=\"text\" placeholder=\"hide\"/>\r\n                </form>\r\n            </div> */}\r\n            </div>\r\n           \r\n        </div>\r\n   \r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n\r\n// import classes from './Projects.module.css';\r\n\r\nconst projects = (props) => {\r\n    return (\r\n        <div>\r\n        <div className=\"wrapper\">\r\n            {/* <!-- Sidebar  -->/ */}\r\n            <Sidebar />\r\n            <div id=\"content\">\r\n                <Navbar />\r\n             <p>Projects Component.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport default projects;","import React from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n\r\n// import classes from './Settings.module.css';\r\n\r\nconst settings = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                {/* <!-- Sidebar  -->/ */}\r\n                <Sidebar />\r\n                <div id=\"content\">\r\n                    <Navbar />\r\n                    <p>Account Settings Component.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default settings;","import React from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n\r\n\r\n// import classes from './Projects.module.css';\r\n\r\nconst Timetracker = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                {/* <!-- Sidebar  -->/ */}\r\n                <Sidebar />\r\n                <div id=\"content\">\r\n                    <Navbar />\r\n                    <p>Timetracker/Report Component.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Timetracker;","import React from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n\r\n\r\n// import classes from './Projects.module.css';\r\n\r\nconst payments = (props) => {\r\n    return (\r\n        <div>\r\n        <div className=\"wrapper\">\r\n            {/* <!-- Sidebar  -->/ */}\r\n            <Sidebar />\r\n            <div id=\"content\">\r\n                <Navbar />\r\n             <p>Payments Component.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport default payments;","import React from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n\r\n// import classes from './Projects.module.css';\r\n\r\nconst NDA = (props) => {\r\n    return (\r\n        <div>\r\n        <div className=\"wrapper\">\r\n            {/* <!-- Sidebar  -->/ */}\r\n            <Sidebar />\r\n            <div id=\"content\">\r\n                <Navbar />\r\n             <p>NDA Component.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport default NDA;","import React from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n\r\n\r\n// import classes from './Projects.module.css';\r\n\r\nconst support = (props) => {\r\n    return (\r\n        <div>\r\n        <div className=\"wrapper\">\r\n            {/* <!-- Sidebar  -->/ */}\r\n            <Sidebar />\r\n            <div id=\"content\">\r\n                <Navbar />\r\n             <p>Support Component.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport default support;","import React from 'react';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n\r\n\r\n// import classes from './Projects.module.css';\r\n\r\nconst refer = (props) => {\r\n    return (\r\n        <div>\r\n        <div className=\"wrapper\">\r\n            {/* <!-- Sidebar  -->/ */}\r\n            <Sidebar />\r\n            <div id=\"content\">\r\n                <Navbar />\r\n             <p>Refer and Earn Component.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\nexport default refer;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\n\n// import classes from './App.module.css';\nimport SignUp from './components/Signup/Signup';\nimport Login from './components/Login/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Home from './components/Home/Home';\nimport Projects from './components/Projects/Projects';\nimport Settings from './components/Settings/Settings';\nimport Timetracker from './components/Timetracker/Timetracker';\nimport Payments from './components/Payments/Payments';\nimport NDA from './components/NDA/NDA';\nimport Support from './components/Support/Support';\nimport Refer from './components/Refer and earn/Refer';\n\n\n\nclass App extends Component {\n  state = {\n    data: null\n  }\n  componentDidMount() {\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n  render() {\n    console.log(this.state.data);\n    return (\n      <BrowserRouter>\n        {/* <Header /> */}\n        <Redirect from=\"/\" to=\"/login\" />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        {/* <Route exact path=\"/dashboard\" component={Dashboard} /> */}\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/time\" component={Timetracker} />\n        <Route path=\"/payments\" component={Payments} />\n        <Route path=\"/nda-contract\" component={NDA} />\n        <Route path=\"/support\" component={Support} />\n        <Route path=\"/refer\" component={Refer} />\n        <Route path=\"/settings\" component={Settings} />\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionType from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nconst authStart = ( state, action ) => {\r\n    return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n    }\r\n};\r\nconst authSuccess = ( state, action ) => {\r\n    return {\r\n        ...state,\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    }\r\n};\r\nconst authFail = ( state, action ) => {\r\n    return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n    }\r\n}\r\nconst authLogout = (state, action ) =>  {\r\n    return {\r\n        ...state,\r\n        token: null,\r\n        userId: null\r\n    };\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionType.AUTH_START: return authStart( state, action );\r\n        case actionType.AUTH_SUCCESS: return authSuccess( state, action );\r\n        case actionType.AUTH_FAIL: return authFail(state, action);\r\n        case actionType.AUTH_LOGOUT: return authLogout(state, action);\r\n        default:\r\n        return state;\r\n    }\r\n};\r\nexport default reducer;","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducers/auth';\nconst store = createStore(reducer);\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}